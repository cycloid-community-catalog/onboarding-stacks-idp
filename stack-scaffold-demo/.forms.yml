---
version: "2"
use_cases:
- name: github
  sections:
  - name: GitHub Configuration
    groups:
    - name: GitHub Access
      technologies: [pipeline]
      vars:
      - name: "GitHub Personal Access Token"
        description: "GitHub Personal Access Token with repo scope to manage repositories and SSH keys."
        key: github_pat
        widget: cy_cred
        widget_config:
          display_keys: false
          cred_types:
            - basic_auth
        type: string
        default: "((github-pat))"
        required: true
      - name: "GitHub Organization"
        description: "GitHub organization or username where the repository will be created"
        key: github_org
        widget: simple_text
        type: string
        default: "($ .org $)"
        required: true

    - name: Repository Configuration
      technologies: [pipeline]
      vars:
      - name: "Repository Name"
        description: "Name of the GitHub repository to create"
        key: github_repo_name
        widget: simple_text
        type: string
        default: "($ .project $)-($ .env $)"
        required: true
      - name: "Repository Description"
        description: "Description for the GitHub repository"
        key: github_repo_description
        widget: simple_text
        type: string
        default: "Scaffolded project for ($ .project $) in ($ .env $) environment"
        required: false
      - name: "Repository Visibility"
        description: "Visibility level of the GitHub repository"
        key: github_repo_visibility
        widget: dropdown
        type: map
        required: true
        default: "Private"
        values:
        - {label: "Private", value: "private"}
        - {label: "Public", value: "public"}
      - name: "Auto-Initialize Repository"
        description: "Initialize the repository with a README file"
        key: github_auto_init
        widget: switch
        type: boolean
        default: false
        required: true
      - name: "Development Stack"
        description: "Select a scaffolding template according to your desired development stack."
        key: git_source_path
        widget: dropdown
        required: true
        type: map
        values:
        - {label: "REST API using Express and Prisma Client", value: "express"}
        - {label: "REST API using Fastify and Prisma Client", value: "fastify"}
        - {label: "REST API using hapi and Prisma Client", value: "hapi"}
        - {label: "REST API using Koa and Prisma Client", value: "koa"}
        - {label: "REST API using NestJS and Prisma Client", value: "nest"}
        - {label: "Web app using Next.js and Prisma Client", value: "nextjs"}
        - {label: "Fullstack app with Nuxt using Vue and Prisma Client", value: "nuxt"}
        - {label: "Web app using React Router 7 and Prisma ORM", value: "react-router-7"}
        - {label: "Simple NodeJS WebApp", value: "simple-counter"}
        default: "Simple NodeJS WebApp"


- name: gitlab
  sections:
  - name: GitLab Configuration
    groups:
    - name: GitLab Access
      technologies: [pipeline]
      vars:
      - name: "GitLab Personal Access Token"
        description: "GitLab Personal Access Token with api scope to manage repositories and SSH keys."
        key: gitlab_pat
        widget: cy_cred
        widget_config:
          display_keys: false
          cred_types:
            - basic_auth
        type: string
        default: "((gitlab-pat))"
        required: true
      - name: "GitLab Instance URL"
        description: "GitLab instance URL (e.g., https://gitlab.com or https://gitlab.company.com)"
        key: gitlab_url
        widget: simple_text
        type: string
        default: "https://gitlab.com"
        required: true
      - name: "GitLab Group/Namespace"
        description: "GitLab group or namespace where the repository will be created"
        key: gitlab_namespace
        widget: simple_text
        type: string
        default: "($ .org $)"
        required: true

    - name: Repository Configuration
      technologies: [pipeline]
      vars:
      - name: "Repository Name"
        description: "Name of the GitLab repository to create"
        key: gitlab_repo_name
        widget: simple_text
        type: string
        default: "($ .project $)-($ .env $)"
        required: true
      - name: "Repository Description"
        description: "Description for the GitLab repository"
        key: gitlab_repo_description
        widget: simple_text
        type: string
        default: "Scaffolded project for ($ .project $) in ($ .env $) environment"
        required: false
      - name: "Repository Visibility"
        description: "Visibility level of the GitLab repository"
        key: gitlab_repo_visibility
        widget: dropdown
        type: map
        required: true
        default: "Private"
        values:
        - {label: "Private", value: "private"}
        - {label: "Internal", value: "internal"}
        - {label: "Public", value: "public"}
      - name: "Development Stack"
        description: "Select a scaffolding template according to your desired development stack."
        key: git_source_path
        widget: dropdown
        required: true
        type: map
        values:
        - {label: "REST API using Express and Prisma Client", value: "express"}
        - {label: "REST API using Fastify and Prisma Client", value: "fastify"}
        - {label: "REST API using hapi and Prisma Client", value: "hapi"}
        - {label: "REST API using Koa and Prisma Client", value: "koa"}
        - {label: "REST API using NestJS and Prisma Client", value: "nest"}
        - {label: "Web app using Next.js and Prisma Client", value: "nextjs"}
        - {label: "Fullstack app with Nuxt using Vue and Prisma Client", value: "nuxt"}
        - {label: "Web app using React Router 7 and Prisma ORM", value: "react-router-7"}
        - {label: "Simple NodeJS WebApp", value: "simple-counter"}
        default: "Simple NodeJS WebApp"

- name: azuredevops
  sections:
  - name: Azure DevOps Configuration
    groups:
    - name: Azure DevOps Access
      technologies: [pipeline]
      vars:
      - name: "Azure credentials"
        description: "The azure credential used to deploy the infrastructure. It contains subscription_id, tenant_id, client_id, and client_secret."
        key: azure_cred
        widget: cy_cred
        widget_config:
          display_keys: false
          cred_types:
            - azure
        type: string
        default: "((azure))"
        required: true

    - name: Repository Configuration
      technologies: [pipeline]
      vars:
      - name: "Azure DevOps Organization"
        description: "Azure DevOps organization"
        key: azuredevops_org
        widget: simple_text
        type: string
        default: "($ .org $)"
        required: true
      - name: "Azure DevOps Project"
        description: "Azure DevOps project"
        key: azuredevops_project
        widget: simple_text
        type: string
        default: "($ .project $)"
        required: true
      - name: "Azure DevOps Repository Name" 
        description: "Azure DevOps repository name"
        key: azuredevops_repo_name
        widget: simple_text
        type: string
        default: "($ .project $)-($ .env $)"
        required: true
      - name: "Development Stack"
        description: "Select a scaffolding template according to your desired development stack."
        key: git_source_path
        widget: dropdown
        required: true
        type: map
        values:
        - {label: "REST API using Express and Prisma Client", value: "express"}
        - {label: "REST API using Fastify and Prisma Client", value: "fastify"}
        - {label: "REST API using hapi and Prisma Client", value: "hapi"}
        - {label: "REST API using Koa and Prisma Client", value: "koa"}
        - {label: "REST API using NestJS and Prisma Client", value: "nest"}
        - {label: "Web app using Next.js and Prisma Client", value: "nextjs"}
        - {label: "Fullstack app with Nuxt using Vue and Prisma Client", value: "nuxt"}
        - {label: "Web app using React Router 7 and Prisma ORM", value: "react-router-7"}
        - {label: "Simple NodeJS WebApp", value: "simple-counter"}
        default: "Simple NodeJS WebApp"
