---
version: "2"
use_cases:
- name: project
  sections:
  - name: GitHub Configuration
    groups:
    - name: GitHub Access
      technologies: [pipeline]
      vars:
      - name: "GitHub Personal Access Token"
        description: "GitHub Personal Access Token with repo scope to manage repositories and SSH keys."
        key: github_pat
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - basic_auth
        type: string
        default: "((github-pat.password))"
        required: true
      - name: "GitHub Organization"
        description: "This is the organization that will be used to create the repository."
        key: github_organization
        widget: simple_text
        type: string
        default: "cycloid-demo"
        required: true

    - name: Repository Configuration
      technologies: [pipeline]
      vars:
      - name: "Repository Description"
        description: "Description for the GitHub repository"
        key: github_repo_description
        widget: simple_text
        type: string
        default: "Scaffolded project for ($ .project $) in ($ .env $) environment"
        required: false
      - name: "Repository Visibility"
        description: "Visibility level of the GitHub repository"
        key: github_repo_visibility
        widget: dropdown
        type: map
        required: true
        default: "Private"
        values:
        - {label: "Private", value: "private"}
        - {label: "Public", value: "public"}
      - name: "Development Stack"
        description: "Select a scaffolding template according to your desired development stack."
        key: git_source_path
        widget: dropdown
        required: true
        type: map
        values:
        - {label: "REST API using Express and Prisma Client", value: "express"}
        - {label: "REST API using Fastify and Prisma Client", value: "fastify"}
        - {label: "REST API using hapi and Prisma Client", value: "hapi"}
        - {label: "REST API using Koa and Prisma Client", value: "koa"}
        - {label: "REST API using NestJS and Prisma Client", value: "nest"}
        - {label: "Web app using Next.js and Prisma Client", value: "nextjs"}
        - {label: "Fullstack app with Nuxt using Vue and Prisma Client", value: "nuxt"}
        - {label: "Web app using React Router 7 and Prisma ORM", value: "react-router-7"}
        - {label: "Simple NodeJS WebApp", value: "simple-counter"}
        default: "Simple NodeJS WebApp"


- name: pr-monitor
  sections:
  - name: config
    groups:
    - name: github
      technologies: [pipeline]
      vars:
      - name: "pat"
        description: "GitHub Personal Access Token with repo scope to read the application repository."
        key: github_pat
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - basic_auth
        type: string
        default: "((github-pat.password))"
        required: true
      - name: "organization"
        description: "This is the organization that will be used to read the application repository."
        key: github_organization
        widget: simple_text
        type: string
        default: "cycloid-demo"
        required: true


- name: testenv
  sections:
  - name: config
    groups:
    - name: application
      technologies: [pipeline]
      vars:
      - name: "Application Git URL"
        description: "Git URL where the application is stored."
        key: app_git_url
        widget: cy_inventory_resource
        widget_config:
          attribute: ssh_clone_url
          filters:
            type: github_repository
            project: ($ .project $)
        required: true
        type: string
      - name: "Application Git Branch or Tag"
        description: "Git branch or tag where the application is stored."
        key: app_git_branch
        widget: auto_complete
        type: string
        values: ["develop", "main", "master", "v1.0.0"]
        default: "main"
        required: true
      - name: "SSH Key"
        description: "The SSH private key to access the git repository."
        key: app_git_ssh_key
        widget: cy_cred
        widget_config:
          display_keys: false
          cred_types:
            - ssh
        type: string
        default: "((($ .project $)-($ .env $)-app-git-ssh.ssh_key))"
        required: true

    - name: Kubernetes Cluster
      technologies: [pipeline]
      vars:
      - name: "Kubeconfig"
        description: "The Kubeconfig to access your Kubernetes Cluster."
        key: kubeconfig_content
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - custom
        type: string
        default: ((($ .project $)-($ .env $)-kubeconfig.kubeconfig))
        required: true

    - name: ArgoCD Git Repository
      # technologies: [pipeline, templating]
      technologies: [pipeline]
      vars:
      - name: "ArgoCD Git Repository"
        description: "The ArgoCD Git Repository to send the manifests to."
        key: argocd_git_url
        widget: cy_inventory_resource
        widget_config:
          attribute: http_clone_url
          filters:
            type: github_repository
            project: ($ .project $)
        required: true
        type: string
      - name: "ArgoCD Git Branch"
        description: "The ArgoCD Git Branch to send the manifests to."
        key: argocd_git_branch
        widget: auto_complete
        type: string
        values: ["main", "master"]
        default: "main"
        required: true
    - name: ArgoCD Git Repository SSH Key
      technologies: [pipeline]
      vars:
      - name: "ArgoCD Git Repository SSH Key"
        description: "The ArgoCD Git Repository SSH Key to access the git repository."
        key: argocd_git_ssh_key
        widget: cy_cred
        widget_config:
          display_keys: false
          cred_types:
            - ssh
        type: string
        default: "((($ .project $)-($ .env $)-git-ssh.ssh_key))"

    - name: DockerHub Registry
      # technologies: [pipeline, templating]
      technologies: [pipeline]
      vars:
      - name: "DockerHub Repository"
        description: "The DockerHub repository to store your application images."
        key: dockerhub_repository
        widget: simple_text
        required: true
        type: string
        default: "olivier2t/app-test-env"
    - name: DockerHub Credentials
      technologies: [pipeline]
      vars:
      - name: "DockerHub Credentials"
        description: "The DockerHub credentials to access the registry."
        key: dockerhub_cred
        widget: cy_cred
        widget_config:
          display_keys: false
          cred_types:
            - basic_auth
        required: true
        type: string
        default: "((dockerhub))"